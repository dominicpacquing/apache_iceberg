services:
  spark-iceberg:
    image: tabulario/spark-iceberg:3.5.1_1.5.0
    container_name: spark-iceberg
    build: spark/
    networks:
      iceberg_net:
    depends_on:
      mysql:
        condition: service_healthy
      minio:
        condition: service_healthy
      rest:
        condition: service_started
    volumes:
      - ./warehouse:/home/iceberg/warehouse
      - ./notebooks:/home/iceberg/notebooks/notebooks
      - ./datasets:/home/iceberg/datasets
      - ./scripts:/home/iceberg/scripts
    environment:
      AWS_ACCESS_KEY_ID: admin
      AWS_SECRET_ACCESS_KEY: password
      AWS_REGION: us-east-1
      AWS_ENDPOINT_URL_S3: http://minio:9000
      DB_USERNAME: root
      DB_PASSWORD: password
    ports:
      - 8888:8888
      - 8080:8080
      - 10000:10000
      - 10001:10001
  mysql:
    image: public.ecr.aws/docker/library/mysql:8.0.33
    restart: always
    networks:
      iceberg_net:
    volumes:
      - ./db:/var/lib/mysql
    ports:
      - "3305:3306"
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: iceberg
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-uroot", "-p$$MYSQL_ROOT_PASSWORD", "-h", "localhost" ]
      timeout: 20s
      retries: 10

  minio:
    image: minio/minio
    container_name: minio
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=password
      - MINIO_DOMAIN=minio
    volumes:
      - ./minio:/data
    networks:
      iceberg_net:
        aliases:
          - warehouse.minio
    ports:
      - 9001:9001
      - 9000:9000
    command: ["server", "/data", "--console-address", ":9001"]
    healthcheck:
      test: >-
        mc ready local

  rest:
    image: tabulario/iceberg-rest:1.5.0
    container_name: iceberg-rest
    networks:
      iceberg_net:
    ports:
      - 8181:8181
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
      - CATALOG_WAREHOUSE=s3://warehouse/
      - CATALOG_IO__IMPL=org.apache.iceberg.aws.s3.S3FileIO
      - CATALOG_S3_ENDPOINT=http://minio:9000

  mc:
    depends_on:
    - minio
    image: minio/mc
    container_name: mc
    networks:
      iceberg_net:
    environment:
      AWS_ACCESS_KEY_ID: admin
      AWS_SECRET_ACCESS_KEY: password
      AWS_REGION: us-east-1
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc config host add minio http://minio:9000 admin password) do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc mb minio/warehouse;
      /usr/bin/mc policy set public minio/warehouse;
      tail -f /dev/null
      "

networks:
  iceberg_net:
